/***********************************************************************/
/* This file contains unpublished documentation and software           */
/* proprietary to Cortina Systems Incorporated. Any use or disclosure, */
/* in whole or in part, of the information in this file without a      */
/* written consent of an officer of Cortina Systems Incorporated is    */
/* strictly prohibited.                                                */
/* Copyright (c) 2002 by Cortina Systems Incorporated.                 */
/***********************************************************************/
/*
 * m2r_error.h
 *
 * Error codes for various error callout's from the driver.
 *
 */
#ifndef __M2R_ERROR_H__
#define __M2R_ERROR_H__

#include "cs_types.h"

#define EM2R_ERROR_CODE_BASE	( 0x1000 )

/* NOTE: Do not change these values! */

typedef enum {
  EM2R_ERROR_CODE_START = EM2R_ERROR_CODE_BASE,

  /* Driver related error code enums start here */
  EM2R_DRVR_CODE_BASE	= EM2R_ERROR_CODE_BASE,
  EM2R_DRVR_ALRDY_LOADED = EM2R_DRVR_CODE_BASE,
  EM2R_DRVR_NOT_LOADED,
  EM2R_DRVR_INCORRECT_ENDIANESS,
  EM2R_ALRDY_OUT_FILE_OPENED,
  EM2R_OUT_FILE_OPEN_ERROR,
  EM2R_NO_OUT_FILE_OPENED,

  /* Device(dev_id) related error code enums start here */
  EM2R_DEV_CODE_BASE,
  EM2R_DEV_ID_OUT_OF_RANGE = EM2R_DEV_CODE_BASE,
  EM2R_DEV_NOT_REGD,
  EM2R_DEV_NOT_INITED,
  EM2R_CHIP_JTAG_ID_MISMATCH,
  EM2R_DEV_INVALID_HRESET_SEL,
  EM2R_BIST_NOT_DONE,
  EM2R_MBIST_BAD_STATUS,
  EM2R_SBIST_BAD_STATUS,
  EM2R_DEV_INVALID_MODE,
  EM2R_DEV_SEM_INIT_FAILED,
  EM2R_DEV_SEM_TAKE_FAILED,
  EM2R_DEV_INVALID_USER_ARG,

  /* Port(port_id) related error code enums start here */
  EM2R_PORT_CODE_BASE,
  EM2R_PORT_ID_OUT_OF_RANGE = EM2R_PORT_CODE_BASE,
  EM2R_PORT_UNINITIALIZED,
  EM2R_PORT_MALLOC_FAILED,
  EM2R_PORT_SEM_INIT_FAILED,
  EM2R_PORT_SEM_TAKE_FAILED,
  EM2R_PORT_CFG_NULL,
  EM2R_PORT_SUMM_NULL,
  EM2R_PORT_DEBUG_MODE_INVALID,
  EM2R_PORT_CFG_VALIDITY_ERR,
  EM2R_PORT_LOCK_NULL,
  EM2R_PORT_INVALID_OP,
  EM2R_PORT_INVALID_DIR,
  EM2R_PORT_NULL_PTR,
  EM2R_PORT_TBL_NULL,
  EM2R_PORT_TBL_START_INVALID,
  EM2R_PORT_TBL_NUM_INVALID,
  EM2R_PORT_INVALID_MOD_ID,
  EM2R_PORT_MIN_GT_MAX,
  EM2R_PORT_INVALID_REF_CLK,
  EM2R_PORT_RANGE_ERR,
  EM2R_INVALID_HRESET_SEL,
  EM2R_RESET_TIMEOUT,
  EM2R_PORT_INVALID_USER_ARG,
  EM2R_PORT_INVALID_SIZE,

  /* FRAMER RELATED ERRORS */
  EM2R_INVALID_IN_RMAC_MODE,
  EM2R_INVALID_FRAMER_MODE,
  EM2R_INVALID_IN_ETH_MODE,
  EM2R_INVALID_IN_SONET_MODE,
  EM2R_INVALID_STREAM,
  EM2R_INVALID_OVRHD,
  EM2R_INVALID_FR_DOMAIN,
  EM2R_INVALID_SPE_BW,
  EM2R_INVALID_RX_BURST_LEN,
  EM2R_INVALID_TOH_BYTE,
  EM2R_INVALID_OVRHD_SRC,
  EM2R_OVRHD_SRC_NOT_VALID,
  EM2R_FR_NULL_TRACE_MSG,


  /* RMAC RELATED ERRORS   */
  EM2R_RMAC_INVALID_IN_BYPASS,
  EM2R_RMAC_INVALID_IN_SRP,
  EM2R_RMAC_INVALID_IN_RPR,
  EM2R_RMAC_INVALID_MEM_ID,
  EM2R_CAM_ENTRY_INVALID_SA,
  EM2R_RMAC_INVALID_SRESET_SEL,
  EM2R_RMAC_CTL_SEND_BUF_BUSY,
  EM2R_RMAC_IPS_SEND_BUF_BUSY,
  EM2R_RMAC_INVALID_IN_ONETB,
  EM2R_RMAC_INVALID_IN_DUAL_TB,
  EM2R_MS_FILE_OPEN_ERROR,
  EM2R_MS_INVALID_FILE_ENTRIES,
  EM2R_MS_INVALID_FA_PKT_LENGTH,
  EM2R_MS_UNMATCHED_CFG_MODE,
  EM2R_MS_UNKNOWN_CFG_MODE,
  EM2R_MS_UNCLEAR_SEMA,
  EM2R_MS_SEMA_REQ_NO_RESPONSE,
  EM2R_RMAC_UNDEFINED_SPL_IRQ_OP,
  EM2R_RMAC_WATCHDOG_LOCKED,

  /* LIF related ERRORS     */
  EM2R_LIF_INVALID_IF,
  EM2R_LIF_INVALID_IN_ETH_MODE,
  EM2R_LIF_INVALID_IN_SONET_MODE,
  EM2R_LIF_INVALID_LPTIME_MODE,
  EM2R_LIF_INVALID_DIGITAL_LB,
  EM2R_LIF_INVALID_ANALOG_LB,
  EM2R_LIF_INVALID_REF_CLK,
  EM2R_LIF_INVALID_ERROR_OP,

  /* PPRBS related ERRORS     */
  EM2R_PPRBS_INVALID_CHANNEL,
  EM2R_PPRBS_INVALID_RATE,
  EM2R_PPRBS_RESYNC_FAILURE,

  /* ETH related errors */
  EM2R_ETH_INVALID_MSG_SIZE,
  EM2R_ETH_MSG_TX_BUSY,
  EM2R_XETH_NULL_BUFFER,
  EM2R_XETH_PROTOCOL_ERR,
  EM2R_XETH_CLK_ERROR,
  EM2R_XETH_INVALID_ALARM,

  /* XGXS block ERRORS */
  EM2R_XGXS_BLK_POINTER_NULL,
  EM2R_XGXS_INVALID_XAUI_LANE_ID,

  /************** DO NOT ADD ERROR CODES BELOW THIS LINE ****************/
  EM2R_MAX_ERR_CODE
} em2r_error_enum_t ;


#define EM2R_OFST(x)    (x - EM2R_ERROR_CODE_BASE)


#endif /* __M2R_ERROR_H__ */
